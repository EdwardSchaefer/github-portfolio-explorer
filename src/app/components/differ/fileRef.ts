export const fileRef = {"filename":"script.js","data":"var equalTemp = 12;\nvar currentNote = 0;\nvar isDown = false;\n\n//initializes variables and determines if the mouse is clicked or not\n$(document)\n  .ready(function() {\n    tableMaker(equalTemp);\n    armSynth();\n    context = new window.AudioContext() //synthesizer\n    referencePitchHz = 440;\n    referencePitchN = 49;\n    osc1 = context.createOscillator();\n    osc1.type =\"square\";\n    gain = context.createGain();\n    gain.connect(context.destination);\n    gain.gain.value = 0;\n    osc1.start(0)\n    osc1.connect(gain);\n    })\n  .mousedown(function(){\n      isDown = true;\n      console.log(isDown)\n  })\n  .mouseup(function(){\n      isDown = false;\n      console.log(isDown)\n  })\n\n\n//Creates a table of notes based on the selected temperament using nested for loops.\n//Also calls the colorize function.\nvar tableMaker = function(equalTemp){\n  var i = 0;\n  var j = 0;\n  var noteID = 0;\n  var currentNote = 0;\n    for( i = 0; i <= equalTemp; i++){\n      $('.noteTable tr:last').after(\"<tr><td>0</td></tr>\");\n      $('.noteTable td:last').prop('class', 0)\n      $('.noteTable td:last').prop('id', noteID)\n      noteID++;\n      for( j = 0; j < equalTemp; j++){\n        var currentNote = (i + (i * j))\n        if (currentNote === equalTemp){\n          $('.noteTable td:last').after(\"<td>0</td>\");\n          $('.noteTable td:last').prop('class', 0)\n          $('.noteTable td:last').prop('id', noteID)\n          noteID++;\n        }\n        else if(currentNote > equalTemp){\n          $('.noteTable td:last').after(\"<td>\" + (currentNote % equalTemp) + \"</td>\");\n          $('.noteTable td:last').prop('class', (currentNote % equalTemp));\n          $('.noteTable td:last').prop('id', noteID)\n          noteID++;\n        }\n        else\n        {\n          $('.noteTable td:last').after(\"<td>\" + (i + (i * j)) + \"</td>\");\n          $('.noteTable td:last').prop('class', (i + (i *j)));\n          $('.noteTable td:last').prop('id', noteID)\n          noteID++;\n        };\n      };\n    };\n    colorize();\n  };\n\n//Deletes the table to make room for a new table.\nvar tableDeleter = function(){\n  $(\".noteTable tr:gt(0)\").detach();\n  delete noteArray;\n};\n\n//Calculates the pitch of the note and plays it if the mouse is clicked and over the note.\nfunction armSynth(){\n  $(\".noteTable td\")\n    .mouseover( \n      function() {\n      var desiredPitchN = ((parseInt(this.innerHTML))) + 49;\n      var equalTempNthRootOfTwo = Math.pow(2, (1/equalTemp));\n      var desiredPitchNMinusReferencePitchN = (desiredPitchN - referencePitchN);\n      var productQ = Math.pow(equalTempNthRootOfTwo, desiredPitchNMinusReferencePitchN);\n      var desiredPitchHz = (referencePitchHz * productQ);\n      osc1.frequency.value = desiredPitchHz;\n      console.log(desiredPitchHz)\n      if (isDown === true)\n      {\n        gain.gain.value = 100;\n        console.log(isDown);\n      }\n      else\n      {\n        console.log(isDown);\n      }\n    })\n    .mouseleave(function(){\n      gain.gain.value = 0;\n    })\n    .mouseup(function(){\n      gain.gain.value = 0;\n    })\n    .mousedown(function(){\n      gain.gain.value = 100;\n    })\n  };\n\n//Colors the notes of the table based on the interval.\nfunction colorize(){\n  for( k = 0; k <= equalTemp; k += 1){\n    var selfColor = Math.floor((360 / equalTemp * k) % 360);\n    $(\".\" + k).css(\"backgroundColor\", \"hsl(\" + (selfColor / 1) + \", 100%, 75%\");  //rainbow\n  };\n};\n\n//Changes the temperament to the one selected by the user.\nfunction newTemp() {\n    equalTemp = document.getElementById(\"selectTemp\").selectedIndex + 3; //plus whatever the lowest value is\n    tableDeleter();\n    tableMaker(equalTemp);\n    armSynth();\n}"}
